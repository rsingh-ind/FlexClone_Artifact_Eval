rohit_workloads_testing

* filebench-1.5-alpha1  directory contains the src code of the filebench
  (Refer https://github.com/filebench/filebench/blob/master/README to know about the steps required to compile the src code)

* In this experiment, we use filebench benchmark to report macrobenchmark results

* We run filebench workloads: varmail, fileserver and a microbenchark (append operation) on overlayfs mounted on Btrfs, XFS, Ext4, ourExt4 
  (Refer https://github.com/filebench/filebench/blob/master/README to know how to use these workloads)

*************************************************************************
* Note: Run following command before running filebench:			*
*		$echo 0 > /proc/sys/kernel/randomize_va_space		*
* 	Otherwise, filebench may throw error or it may face segfault	*
*************************************************************************

* We will report operations/sec reported by filebench for different workloads on different filesystems

* Configuration of each workload will be as following:
	- numfiles = 32768
	- filesize = 256KB 
	- num threads = 8
	- iosize = 1m
	- runtime = 10mins (600 secs)

* We perform filebench experiment in 2 stages: (Do this inside mounted filesystems)
	- Stage 1:
		- Set prealloc=100 (We want filebench to create files on which open/close/read/write will be performed)
		- Run filebench
		- Ignore filebench output (We are only interested in the files/directory structure created by filebench
						in this stage)
	- Stage 2:
		- Update filebench workload script (eg: fileserver.f) so that it uses preallocated files

		- To achieve this, set "prealloc", "reuse" and "trusttree" flags
		  Eg: "define fileset name=bigfileset,path=$dir,size=$filesize,entries=$nfiles,dirwidth=$meandirwidth,prealloc,reuse"

		- "reuse" flag indicates the filebench to use already created directory structure 
	
* In certain workloads such as fileserver, creation of new files takes place. We don't treat these new files are child or parent, instead, they are 
  just normal files (not par/child) that are created in ourExt4.
